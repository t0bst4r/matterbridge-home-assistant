name: Pull Request Build
on:
  pull_request:

env:
  CI: 'true'
  NODE_VERSION: '18.x'

jobs:
  lint:
    name: ‚úèÔ∏è Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üèó Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: üöõ Install dependencies
        run: yarn install --check-files
      - name: ‚úèÔ∏è Lint
        run: yarn lint

  test:
    name: üîé Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üèó Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: üöõ Install dependencies
        run: yarn install --check-files
      - name: üîé Test
        run: yarn test

  build:
    name: üõ†Ô∏è Build Node
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üèó Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: üöõ Install dependencies
        run: yarn install --check-files
      - name: üõ†Ô∏è Build
        run: yarn build
      - name: üöö Package
        run: yarn pack --filename matterbridge-home-assistant.tgz
      - name: ‚§¥Ô∏è Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-package
          path: matterbridge-home-assistant.tgz

  docker:
    name: üõ†Ô∏è Build Docker
    runs-on: ubuntu-latest
    needs: [test, lint, build]
    outputs:
      image-tag: ${{ steps.flags.outputs.image-tag }}
    permissions:
      packages: write
    steps:
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üèó Set up build cache
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.docker-cache
          key: docker-${{ github.sha }}
          restore-keys: |
            docker
      - name: üèó Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: üèó Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: üèó Login to ghcr.io
        uses: docker/login-action@v3
        if: ${{ github.head_ref == 'release-please--branches--main--components--matterbridge-home-assistant' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: ‚ÑπÔ∏è Compose build flags
        id: flags
        run: |
          PACKAGE_VERSION="$(yq -r '.version' package.json)"
          IMAGE_TAG_VERSION="$(yq -r '.version' package.json)-beta${{ github.event.number }}"
          IMAGE_TAG="ghcr.io/${{github.repository}}/beta:$IMAGE_TAG_VERSION"
          MATTERBRIDGE_VERSION="$(yq -r '.peerDependencies.matterbridge' package.json)"
          echo "version=$PACKAGE_VERSION" >> "$GITHUB_OUTPUT"
          echo "image-tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "matterbridge-version=$MATTERBRIDGE_VERSION" >> "$GITHUB_OUTPUT"
      - name: ‚§¥Ô∏è Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: npm-package
          path: docker
      - name: üöÄ Build
        uses: docker/build-push-action@v6.0.1
        with:
          push: ${{ github.head_ref == 'release-please--branches--main--components--matterbridge-home-assistant' }}
          context: ./docker
          cache-from: |
            type=local,src=/tmp/.docker-cache
            ${{ steps.flags.outputs.image-tag }}
          tags: ${{ steps.flags.outputs.image-tag }}
          cache-to: |
            type=local,mode=max,dest=/tmp/.docker-cache-new
          outputs: |
            type=image,name=${{ steps.flags.outputs.image-tag }},push=false
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          build-args: |
            MATTERBRIDGE_VERSION=${{ steps.flags.outputs.matterbridge-version }}
      - name: üöö Swap build cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache
