name: Release

on:
  schedule:
    - cron: '0 18 * * FRI'
  workflow_dispatch:

env:
  CI: 'true'
  NODE_VERSION: '20.x'

jobs:
  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.LERNA_SSH_PRIVATE_KEY }}
      - name: 🤖 Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions [Bot]"

      # caching
      - name: 🏗 Set up nx cache
        uses: actions/cache@v4.0.2
        with:
          path: .nx
          key: ${{ runner.os }}-nx-cache
      - name: 🏗 Set up docker cache
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.docker-cache
          key: docker-${{ github.sha }}
          restore-keys: |
            docker

      # setup
      - name: 🏗 Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
      - name: 🏗 Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # build
      - name: 🚛 Install dependencies
        run: npm ci
      - name: ✏️ Lint
        run: |
          npm run lint
          npm run prettier
      - name: 🔎 Test
        run: npm test
      - name: 🛠️ Build
        run: npm run build

      # release
      - name: 🚀 Publish Node
        id: publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "previous-version=$(yq -r '.version' lerna.json)" >> "$GITHUB_OUTPUT"
          npm run release
          echo "released-version=$(yq -r '.version' lerna.json)" >> "$GITHUB_OUTPUT"
      - name: 🚀 Publish Docker
        env:
          GITHUB_REPO_URL: ${{ github.server_url }}/${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
          DOCKER_LOCAL_CACHE_FROM: /tmp/.docker-cache
          DOCKER_LOCAL_CACHE_TO: /tmp/.docker-cache-new
          DOCKER_PLATFORM: linux/amd64,linux/arm/v7,linux/arm64/v8
        run: |
          npm run release-docker

      # tear down
      - name: 🚚 Swap docker build cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache
      - name: 🚀 Repository Dispatch
        if: steps.publish.outputs.previous-version != steps.publish.outputs.released-version
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.ADDON_DISPATCH_TOKEN }}
          repository: t0bst4r/matterbridge-home-assistant-addon
          event-type: release
          client-payload: '{"latest-version": "${{ steps.publish.outputs.released-version }}"}'
